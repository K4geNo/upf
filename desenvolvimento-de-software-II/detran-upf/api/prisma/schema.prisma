// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(uuid())
  personName         String
  cpf                String   @unique
  addressDescription String?
  birthDate          DateTime
  phone              String
  email              String?
  pcd                Boolean
  createdAt          DateTime @default(now())

  driverLicense DriverLicense[]
  userVehicle   UserVehicle[]
  infractions   Infractions[]

  @@map("users")
}

model DriverLicense {
  id        String   @id @default(uuid())
  number    String
  category  String
  validity  DateTime
  points    Int
  createdAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@map("driver_licenses")
}

model Vehicle {
  id                String   @id @default(uuid())
  brand             String
  licensePlate      String
  color             String
  manufacturingYear Int
  model             String
  type              Int
  ipvaPaid          Boolean
  ipvaValue         Int
  createdAt         DateTime @default(now())

  ipva        Ipva[]
  userVehicle UserVehicle[]
  infractions Infractions[]

  @@map("vehicles")
}

model Ipva {
  id          String   @id @default(uuid())
  value       Float
  paymentDate DateTime
  currentYear Int
  createdAt   DateTime @default(now())

  vehicleId String
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  @@map("ipvas")
}

model UserVehicle {
  id        String  @id @default(uuid())
  userId    String
  vehicleId String
  user      User    @relation(fields: [userId], references: [id])
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  @@unique([userId, vehicleId], name: "userId_vehicleId")
  @@map("user_vehicles")
}

model Infractions {
  id        String   @id @default(uuid())
  vehicleId String
  userId    String
  value     Float
  date      DateTime
  points    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])

  @@map("infractions")
}
