// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String        @id @default(uuid())
  nome_pessoa        String
  cpf                String        @unique
  descricao_endereco String?
  data_nascimento    DateTime
  telefone           String
  email              String?
  pcd                Boolean
  createdAt          DateTime      @default(now())
  cnh                Cnh[]
  userVehicle        UserVehicle[]
  infracoes          Infracoes[]

  @@map("users")
}

model Cnh {
  numero    String   @id
  userId    String
  categoria String
  validade  DateTime
  pontos    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Vehicle {
  id             String        @id @default(uuid())
  marca          String
  placa          String
  cor            String
  ano_fabricacao Int
  modelo         String
  tipo           Int
  ipva_quitado   Int
  ipva_valor     Int
  Column1        Int
  createdAt      DateTime      @default(now())
  ipva           Ipva[]
  userVehicle    UserVehicle[]
  infracoes      Infracoes[]

  @@map("vehicles")
}

model Ipva {
  id                  String   @id @default(uuid())
  vehicleId           String
  valor               Float
  data_pagamento      Int
  ano_vigente         Int
  data_pagamento_date DateTime
  createdAt           DateTime @default(now())
  vehicle             Vehicle  @relation(fields: [vehicleId], references: [id])

  @@map("ipvas")
}

model UserVehicle {
  userId    String
  vehicleId String
  user      User    @relation(fields: [userId], references: [id])
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  @@id([userId, vehicleId])
  @@map("user_vehicles")
}

model Infracoes {
  id        String
  vehicleId String
  userId    String
  valor     Float
  data      DateTime
  pontos    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])

  @@id([id])
  @@map("infracoes")
}
